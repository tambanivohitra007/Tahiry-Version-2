// ------------------------------------------------------------
// Author: Rindra Razafinjatovo
// Created on: 2018
// Last Modified: Dec 2024
// Project: Tahiry
// Description: A collection of Bible and Hymnals to streamline and enhance worship presentations for churches.
// ------------------------------------------------------------

ï»¿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace Fihirana_database.fihirana
{

    public partial class Hymnal : XPLiteObject
    {
        long fNumber;
        public long Number
        {
            get { return fNumber; }
            set { SetPropertyValue<long>(nameof(Number), ref fNumber, value); }
        }
        long fID;
        [Key(AutoGenerate =true)]
        public long ID
        {
            get { return fID; }
            set { SetPropertyValue<long>(nameof(ID), ref fID, value); }
        }
        string fAuthor;
        [Size(SizeAttribute.Unlimited)]
        public string Author
        {
            get { return fAuthor; }
            set { SetPropertyValue<string>(nameof(Author), ref fAuthor, value); }
        }
        string fTitle;
        [Size(SizeAttribute.Unlimited)]
        public string Title
        {
            get { return fTitle; }
            set { SetPropertyValue<string>(nameof(Title), ref fTitle, value); }
        }
        string fKey;
        [Size(SizeAttribute.Unlimited)]
        public string Key
        {
            get { return fKey; }
            set { SetPropertyValue<string>(nameof(Key), ref fKey, value); }
        }
        long fStanzas;
        public long Stanzas
        {
            get { return fStanzas; }
            set { SetPropertyValue<long>(nameof(Stanzas), ref fStanzas, value); }
        }
        long fCategory;
        [Persistent(@"Category")]
        public long Category
        {
            get { return fCategory; }
            set { SetPropertyValue<long>(nameof( Category ), ref fCategory, value); }
        }
        string fLyrics;
        [Size(SizeAttribute.Unlimited)]
        public string Lyrics
        {
            get { return fLyrics; }
            set { SetPropertyValue<string>(nameof(Lyrics), ref fLyrics, value); }
        }
        int fActive;
        public int Active
        {
            get { return fActive; }
            set { SetPropertyValue<int>( nameof( Active ), ref fActive, value ); }
        }
        string fCross;
        public string CrossReference
        {
            get { return fCross; }
            set { SetPropertyValue<string>(nameof(CrossReference), ref fCross, value); }
        }
    }

}
